ResizeTransformation+DSL.swift
	public func resizeTo(targetSize: CGSize, contentMode: UIViewContentMode = .ScaleToFill) -> Self
	public func resizeTo(width width: CGFloat, height: CGFloat, contentMode: UIViewContentMode = .ScaleToFill) -> Self
MatisseErrors.swift
	public enum MatisseErrorCode: Int
	case Unknown = 0
	case DownloadError = 1
	case CreationError = 2
	public static var MatisseErrorDomain: String { return "MatisseErrorDomain" }
	public var isMatisseError: Bool
	public var matisseErrorCode: MatisseErrorCode
	public class func matisseUnknownError(message: String? = nil) -> NSError
	public class func matisseDownloadError(message: String? = nil) -> NSError
	public class func matisseCreationError(message: String? = nil) -> NSError
	public class func matisseErrorWithCode(code: MatisseErrorCode, message: String? = nil) -> NSError
ResizeTransformation.swift
	public class ResizeTransformation: NSObject, ImageTransformation
	public let targetSize: CGSize
	public let contentMode: UIViewContentMode
	public let deviceScale: CGFloat
	public convenience init(targetSize: CGSize, contentMode: UIViewContentMode)
	public init(targetSize: CGSize, contentMode: UIViewContentMode, deviceScale: CGFloat)
	public var descriptor: String
	public func transformImage(image: CGImage) throws -> CGImage
